{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","categories","type","value","onChange","target","placeholder","getGifs","category","a","url","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","propTypes","PropTypes","func","isRequired","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"oMAoCeA,EAjCK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAELC,mBAAS,IAFJ,mBAElCC,EAFkC,KAEtBC,EAFsB,KAkBzC,OACE,qCACE,8CACA,sBAAMC,SAbW,SAAAC,GACnBA,EAAEC,iBACFC,QAAQC,IAAIN,GACRA,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAAAW,GAAU,OAAKT,GAAL,mBAAoBS,OAC5CR,EAAc,MAQd,SACE,uBACES,KAAK,OACLC,MAAOX,EACPY,SArBkB,SAAAT,GACxBE,QAAQC,IAAIH,EAAEU,OAAOF,OACrBV,EAAcE,EAAEU,OAAOF,QAoBjBG,YAAY,wB,+CC7BTC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfC,EADe,mGACmFF,GADnF,SAEHG,MAAMD,GAFH,cAEfE,EAFe,gBAGEA,EAAIC,OAHN,uBAGbC,EAHa,EAGbA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QARjB,kBAWdK,GAXc,4CAAH,sDCYLO,EAVK,SAACL,GAEnB,OADApB,QAAQC,IAAImB,GAEV,sBAAKM,UAAU,yCAAf,UACE,qBAAKC,IAAKP,EAAIP,IAAKe,IAAKR,EAAIE,QAC5B,4BAAIF,EAAIE,YCHDO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACdjB,mBAAS,CACjCuB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAuBxC,OAjBAC,qBAAU,WACRvB,EAAQC,GAKLuB,MAAK,SAAAC,GACJC,YAAW,WACTpC,QAAQC,IAAIkC,GACZH,EAAS,CACPf,KAAMkB,EACNL,SAAS,MAEV,UAEN,CAACnB,IAEGoB,EDpB2BM,CAAa1B,GAAjCY,EAFyB,EAE/BN,KAAca,EAFiB,EAEjBA,QAEtB,OACE,qCACE,oBAAIJ,UAAU,oCAAd,SAAoDf,IAEnDmB,GAAW,mBAAGJ,UAAU,oCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAAAC,GAAG,OACb,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEgBhC7B,EAAY8C,UAAY,CACtB7C,cAAe8C,IAAUC,KAAKC,YAGjBC,MA9BM,WAAM,MAEWhD,mBAAS,CAAC,cAFrB,mBAElBU,EAFkB,KAENX,EAFM,KASzB,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAE5B,uBACA,6BACGW,EAAWe,KAAI,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,Y,MClBjBgC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.5e3da28e.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\n\nconst AddCategory = ({ setCategories }) => {\n\n  const [inputValue, setInputValue] = useState('');\n\n  const handleInputChange = e => {\n    console.log(e.target.value)\n    setInputValue(e.target.value)\n  }\n  const handleSubmit = e => {\n    e.preventDefault()\n    console.log(inputValue)\n    if (inputValue.trim().length > 2) {\n      setCategories(categories => [inputValue, ...categories]);\n      setInputValue('');\n    }\n\n\n  }\n  return (\n    <>\n      <h2>Add Category</h2>\n      <form onSubmit={handleSubmit}>\n        <input\n          type='text'\n          value={inputValue}\n          onChange={handleInputChange}\n          placeholder='Category Name'\n        />\n      </form>\n    </>\n  )\n}\n\nexport default AddCategory;","export const getGifs = async (category) => {\n  const url = `https://api.giphy.com/v1/gifs/search?api_key=P85rCYuhxKknBWDEyKBvkSF3zuANMi0y&limit=10&q=${category}`\n  const res = await fetch(url);\n  const { data } = await res.json();\n  const gifs = data.map(img => {\n    return {\n      id: img.id,\n      title: img.title,\n      url: img.images?.downsized_medium.url\n    }\n  });\n  return gifs;\n}","import React from 'react'\n\nconst GifGridItem = (img) => {\n  console.log(img)\n  return (\n    <div className=\"card animate__animated animate__fadeIn\" >\n      <img src={img.url} alt={img.title} />\n      <p>{img.title}</p>\n    </div>\n  )\n}\n\nexport default GifGridItem;","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport GifGridItem from './GifGridItem';\n\nexport const GifGrid = ({ category }) => {\n\n  const { data: images, loading } = useFetchGifs(category);\n\n  return (\n    <>\n      <h3 className=\"animate__animated animate__fadeIn\" >{category}</h3>\n      {/* {loading ? 'Cargando...' : 'Data cargada'} */}\n      {loading && <p className=\" animate__animated animate__flash\">Loading...</p>}\n      <div className=\"card-grid\">\n        {images.map(img => (\n          <GifGridItem key={img.id} {...img} />\n        ))}\n      </div>\n    </>\n  )\n}\n","// el use en el archivo es nombre estandar para identificar el hook\nimport { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/GetGifs';\nexport const useFetchGifs = (category) => {\n  const [state, setState] = useState({\n    data: [],\n    loading: true\n  })\n\n  useEffect(() => {\n    getGifs(category)\n      //pasa por automatico el argumento y hace el set de las iamgenes en el state\n      /*\n      .then(setState)\n      */\n      .then(imgs => {\n        setTimeout(() => {\n          console.log(imgs);\n          setState({\n            data: imgs,\n            loading: false\n          })\n        }, 3000);\n      });\n  }, [category])\n\n  return state // { data: [],loading: false}\n}\n","import React, { useState } from 'react'\nimport AddCategory from './components/AddCategory'\nimport PropTypes from 'prop-types'\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = () => {\n  // const categories = ['One punch', 'samurai X', 'Dragon ball', 'One piece'];\n  const [categories, setCategories] = useState(['One piece']);\n\n  // const handleAddCategory = () => {\n  //   const newCategories = [...categories, 'HunterxHunter'];\n  //   setCategories(newCategories);\n  // };\n\n  return (\n    <>\n      <h2>GifExpertApp</h2>\n      <AddCategory setCategories={setCategories} />\n      {/* <button onClick={handleAddCategory} >Agregar</button> */}\n      <hr />\n      <ol>\n        {categories.map(category => (\n          <GifGrid\n            key={category}\n            category={category} />\n        ))}\n      </ol>\n    </>\n  )\n}\n\nAddCategory.propTypes = {\n  setCategories: PropTypes.func.isRequired,\n}\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}